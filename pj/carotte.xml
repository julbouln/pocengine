	<sprite_type name="carotte">
	  <graphics>

	    <graphic id="main" type="graphic_from_drawing_fun">
	      <args>
		<val_string value="with_alpha"/>	   
		<val_color r="255" g="255" b="255"/>
		<val_string value="with_mirror"/>
		<val_string value="load_multiple"/>
		<val_string value="medias/carotte.png"/>
		<val_size w="64" h="92"/>
	      </args>
	    </graphic>
	  </graphics>
	  <states>
	    <state id="move">
	     <action id="move" type="action_movement">
	       <script>
		<![CDATA[

		function self.on_loop()
		   
		   obj=self.parent.parent.parent;
		   x=obj.get_x();
		   y=obj.get_y();
		   
		   if(x > 800) then
		      self.parent.parent.set_state("move",
						   {
						      physics={0,pi()/2,9.8,10.0},
						      move={2,{dir="east"}}
						   });
		      self.parent.parent.parent.dir="east";
		   end
		   
		   if(x < 0) then
		      self.parent.parent.set_state("move",
						   {
						      physics={0,pi()/2,9.8,10.0},
						      move={2,{dir="west"}}
						   });
		      self.parent.parent.parent.dir="west";
		   end


		end
	  ]]>
	       </script>
	     </action>

	      <action id="collision" type="action_collision">
		<script>
		<![CDATA[

		function self.on_collide(id)
		   obj=self.parent.parent.parent;
		   
		   if (id=="bg" or obj.parent[id].get_type()=="carotte") then
		   else
		      if (obj.get_y()+obj.get_h() < obj.parent[id].get_y()+20) then
			 self.parent.parent.set_state("move",
						      {
							 physics={0,pi()/2,9.8,10.0},
							 move={1,{dir=self.parent.parent.parent.dir}}
						      });
		      end
		   end
		end
	  ]]>
		</script>		
	      </action>

	      <action id="physics" type="action_2d_physics">
	      </action>
	      <action id="anim" type="action_anim">
		<args>
		  <val_int name="refresh" value="8"/>
		  <val_list name="frames">
		    <val_int value="0"/>
		    <val_int value="1"/>
		    <val_int value="0"/>
		    <val_int value="2"/>
		  </val_list>
		</args>

		<script>
		  function self.on_loop()
		     obj=self.parent.parent.parent;
		     fr=self.get_frame();
		     
		     if (obj.dir=="east") then
			fr=fr+3;
		     end
		     
		     obj.graphics.main.set_cur_drawing (fr);
		  end
		</script>

	      </action>
	    </state>


	    <state id="normal">

	      <action id="collision" type="action_collision">
		<script>
		  function self.on_collide(id)
		     
		     if (id=="bg") then
		     else
			self.parent.parent.set_state
			("normal",
			 {
			    physics={0,pi()/2,9.8,10.0}
			 });
		     end
		  end
		</script>		
	      </action>

	      <action id="physics" type="action_2d_physics">
	      </action>

	      <action id="anim" type="action_anim">
		<args>
		  <val_int name="refresh" value="10"/>
		  <val_list name="frames">
		    <val_int value="0"/>

		  </val_list>
		</args>

		<script>
		  function self.on_loop()
		     obj=self.parent.parent.parent;
		     fr=self.get_frame();
		     
		     if (obj.dir=="east") then
			fr=fr+3;
		     end
		     
		     obj.graphics.main.set_cur_drawing (fr);
		  end
		</script>

	      </action>

	    </state>
	  </states>
	  
	  <args>
	    <val_size  name="pixel_size" w="48" h="92"/>
	  </args>
	  <script>
		  self.dir="west";
	  </script>

	</sprite_type>
